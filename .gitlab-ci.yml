# GitLab CI script for base-askapparallel

image: registry.gitlab.com/askapsdp/yandasoft_image/yandasoft:casacore3.5.0-mpich

.common: {tags: [azure]}

stages:
  - build
  - test
  - pages
  - ci_status

build:
  extends: .common
  stage: build
  before_script:
    - sudo apt update && sudo apt install -y g++ git cmake
    - sudo ln -s /usr/lib/x86_64-linux-gnu/ /usr/lib64
  script:
    - n_cpus=`grep '^processor' /proc/cpuinfo  | wc -l`
    - cmake -C /askap/config/askap.gitlab.cmake.in -DASKAPSDP_GIT_URL="https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/ASKAPSDP/" -DCMAKE_INSTALL_PREFIX=./_install -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" -B _build -S .
    - sudo cmake --build _build --target install -j $n_cpus
  artifacts:
    paths:
      - _build

test:
  extends: .common
  stage: test
  dependencies:
    - build
  before_script:
    - sudo apt update && sudo apt install -y cmake xsltproc
  variables:
    CASARCFILES: ${CI_PROJECT_DIR}/_build/base-askap/test_gitlab_casarc.cfg
  script:
    - cd _build
    - tar -xjf /askap/data/measdata.tar.bz2
    - "echo 'measures.directory: '${PWD}'/data' > ${CASARCFILES}"
    - cat $CASARCFILES
    - ctest -C DartConfiguration.tcl -T test --verbose --no-compress-output
  after_script:
    - cd _build
    - askap-cmake/ctest2junit > ctest.xml
  artifacts:
    paths:
      - _build
    reports:
      junit: _build/ctest.xml

pages:
  extends: .common
  stage: pages
  dependencies:
    - test
  before_script:
    - sudo apt update && sudo apt install -y gcovr curl doxygen graphviz
  script:
    - mkdir -p public/build/reports
    - mkdir -p public/coverage
    - gcovr -r . -e '.*/CompilerIdCXX/.*' -e '.*/test/.*' --html --html-details -o public/coverage/index.html
    - gcovr -r . -e '.*/CompilerIdCXX/.*' -e '.*/test/.*' --xml -o public/build/reports/code-coverage.xml
    - cp _build/ctest.xml public/build/reports/unit-tests.xml
    - doxygen doxy.conf && mv html public/doxygen
    - cd public
#    - curl -s https://gitlab.com/ska-telescope/ci-metrics-utilities/raw/master/scripts/ci-badges-func.sh | sh
  artifacts:
    paths:
      - public

success:
  stage: ci_status
  before_script:
    - sudo apt update && sudo apt install -y curl
  after_script:
    - ""
  script:
    - BUILD_STATUS=passed BUILD_KEY=push ./build_status
    - > 
      if [ "$CI_COMMIT_BRANCH" = develop ]; then
        curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=develop https://gitlab.com/api/v4/projects/19044771/trigger/pipeline
      fi
    - >

  when: on_success

failure:
  stage: ci_status
  before_script:
    - sudo apt update && sudo apt install -y curl
  after_script:
    - ""
  script:
    - BUILD_STATUS=failed BUILD_KEY=push ./build_status
  when: on_failure

